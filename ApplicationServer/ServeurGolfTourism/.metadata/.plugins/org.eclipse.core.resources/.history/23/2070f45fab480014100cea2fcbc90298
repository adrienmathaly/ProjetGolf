package http;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.ArrayList;

public class HTTPGolfMobileServer {

	ArrayList<CommunicationManager> communications;
	boolean active;
	
	public HTTPGolfMobileServer() {
		active=true;
		communications=new ArrayList<CommunicationManager>();
		
		try {
			int port = 2500;
			ServerSocket serverSocket;

			serverSocket = new ServerSocket(port);
			System.err.println("Serveur lancé sur le port : " + port);

			while (active) {
				Socket clientSocket = serverSocket.accept();
				System.err.println("Nouveau client connecté");
				BufferedReader in = new BufferedReader(new InputStreamReader(clientSocket.getInputStream()));
				BufferedWriter out = new BufferedWriter(new OutputStreamWriter(clientSocket.getOutputStream()));
				String header="";
				while ((header = header+"\n"+in.readLine()) != null) {
					if (header.isEmpty()) {
						break;
					}
				}
				
				switch(analyzeClient(header)){
				default:;			
				}
				//communications.add(new CommunicationManager());

				out.write("HTTP/1.0 200 OK\r\n");
				out.write("Date: Fri, 31 Dec 1999 23:59:59 GMT\r\n");
				out.write("Server: GolfTourism/1.0.0\r\n");
				out.write("Content-Type: text/html\r\n");
				out.write("Content-Length: 59\r\n");
				out.write("Expires: Sat, 01 Jan 2000 00:59:59 GMT\r\n");
				out.write("Last-modified: Fri, 09 Aug 1996 14:21:40 GMT\r\n");
				out.write("\r\n");
				out.write("<TITLE>Exemple</TITLE>");
				out.write("<P>Ceci est une page d'exemple.</P>");

				System.err.println("Connexion avec le client terminée");
				out.close();
				in.close();
				clientSocket.close();
			}

		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	
	private int analyzeClient(String header){
		int type=0;
		if(header.contains("Origin:MOBILE")){
			type=TypesOfConnection.MOBILE;
		}else{
			if(header.contains("Origin:SUPERVISION")){
				type=TypesOfConnection.SUPERVISION;
			}
		}
		return type;
	}
}
