package http.handlers;

import http.Point;
import http.SetOfUsers;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.HashMap;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;
import com.sun.net.httpserver.HttpExchange;
import logger.Logger;

public class Shot extends CustomizedHandler{

	public Shot(HashMap<String, Logger> loggers) {
		super(loggers);
	}

	@Override
	protected void doYourStuff(HttpExchange t) throws Exception {
		HashMap<String,String> map = parseUserInfo(t);
		if(!SetOfUsers.isUserFullyCreated(map.get("token"))){
			SetOfUsers.setFirstLocationOf(map.get("token"),new Point(Float.parseFloat(map.get("userLt")),Float.parseFloat(map.get("userLg"))));
		}
		SetOfUsers.updateUserLocation(map.get("token"), new Point(Float.parseFloat(map.get("ballLt")),Float.parseFloat(map.get("ballLg"))));
	}

	private JSONObject parseUserInfo(HttpExchange t) throws IOException, ParseException {
		InputStreamReader isr = new InputStreamReader(t.getRequestBody());
		BufferedReader bfr = new BufferedReader(isr);
		return(JSONObject) new JSONParser().parse(bfr);
	}
}
