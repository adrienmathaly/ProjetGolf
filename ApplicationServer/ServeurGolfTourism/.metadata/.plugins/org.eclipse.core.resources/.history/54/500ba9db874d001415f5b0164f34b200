package http.handlers.mobile;

import http.database.DatabaseManager;
import http.handlers.PostHandler;
import http.users.Point;
import http.users.SetOfUsers;

import java.io.OutputStream;
import java.util.HashMap;





import com.sun.net.httpserver.HttpExchange;

import configuration.ConfLoader;

public class Shot extends PostHandler{

	@Override
	protected void doYourStuff(HttpExchange t) throws Exception {
		HashMap<String,Object> map = parseUserInfo(t);
		
		DatabaseManager dbm = new DatabaseManager(formatDbRequest((float)map.get("lg"),(float)map.get("lt")));
		dbm.connect("GET");
		String response = dbm.getResponse();
		if(!SetOfUsers.isUserFullyCreated((String)map.get("token"))){
			SetOfUsers.setFirstLocationOf((String)map.get("token"),new Point((Float)(float)(double)map.get("userLt"),(Float)(float)(double)(map.get("userLg"))));
		}
		SetOfUsers.updateUserLocation((String)map.get("token"), new Point((Float)(float)(double)(map.get("ballLt")),(Float)(float)(double)(map.get("ballLg"))));
		
		t.getResponseHeaders().add("Content-type", "json;charset=utf-8");
		t.sendResponseHeaders(200, response.length());
		OutputStream os = t.getResponseBody();
		os.write(response.getBytes());
		os.close();
	}
	
	
	private String formatDbRequest(Float lg,Float lt) {
		return ConfLoader.getEntry("databaseURL")+"/"+"poi/"+"nearest.php?lg="+lg+"lt="+lt;
	}
	
	private Point applyWeather(Float lg, Float lt){
		Float neg=(Float)(float)Math.random();
		Point p;
		if(neg<0.5){
			Float neg2=(Float)(float)Math.random();
			if(neg2<0.5){
				p=new Point(lg-(neg*5),lt-(neg2*5));
			}else{
				p=new Point(lg-(neg*5),lt+(neg2*5));
			}
		}else{
			Float neg2=(Float)(float)Math.random();
			if(neg2<0.5){
				p=new Point(lg+(neg*5),lt-(neg2*5));
			}else{
				p=new Point(lg+(neg*5),lt+(neg2*5));
			}
		}
		return p;
	}
}
